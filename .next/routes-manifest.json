{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/api/auth/[...nextauth]",
      "regex": "^/api/auth/(.+?)(?:/)?$",
      "routeKeys": {
        "nxtPnextauth": "nxtPnextauth"
      },
      "namedRegex": "^/api/auth/(?<nxtPnextauth>.+?)(?:/)?$"
    },
    {
      "page": "/api/spellbooks/[id]",
      "regex": "^/api/spellbooks/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/spellbooks/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/spells/[id]",
      "regex": "^/api/spells/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/spells/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/spells/[id]/favorite",
      "regex": "^/api/spells/([^/]+?)/favorite(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/spells/(?<nxtPid>[^/]+?)/favorite(?:/)?$"
    },
    {
      "page": "/dashboard/spell/[id]",
      "regex": "^/dashboard/spell/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/dashboard/spell/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/dashboard/spell/[id]/edit",
      "regex": "^/dashboard/spell/([^/]+?)/edit(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/dashboard/spell/(?<nxtPid>[^/]+?)/edit(?:/)?$"
    },
    {
      "page": "/spellbooks/[id]",
      "regex": "^/spellbooks/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/spellbooks/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/spellbooks/[id]/edit",
      "regex": "^/spellbooks/([^/]+?)/edit(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/spellbooks/(?<nxtPid>[^/]+?)/edit(?:/)?$"
    },
    {
      "page": "/spells/[id]",
      "regex": "^/spells/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/spells/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/u/[username]",
      "regex": "^/u/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPusername": "nxtPusername"
      },
      "namedRegex": "^/u/(?<nxtPusername>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/auth/signin",
      "regex": "^/auth/signin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/signin(?:/)?$"
    },
    {
      "page": "/dashboard",
      "regex": "^/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard(?:/)?$"
    },
    {
      "page": "/dashboard/spell/new",
      "regex": "^/dashboard/spell/new(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/spell/new(?:/)?$"
    },
    {
      "page": "/explore",
      "regex": "^/explore(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/explore(?:/)?$"
    },
    {
      "page": "/favorites",
      "regex": "^/favorites(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favorites(?:/)?$"
    },
    {
      "page": "/notifications",
      "regex": "^/notifications(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/notifications(?:/)?$"
    },
    {
      "page": "/profile",
      "regex": "^/profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/profile(?:/)?$"
    },
    {
      "page": "/settings",
      "regex": "^/settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/settings(?:/)?$"
    },
    {
      "page": "/sitemap.xml",
      "regex": "^/sitemap\\.xml(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/sitemap\\.xml(?:/)?$"
    },
    {
      "page": "/spellbooks",
      "regex": "^/spellbooks(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/spellbooks(?:/)?$"
    },
    {
      "page": "/spellbooks/new",
      "regex": "^/spellbooks/new(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/spellbooks/new(?:/)?$"
    },
    {
      "page": "/spells",
      "regex": "^/spells(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/spells(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}